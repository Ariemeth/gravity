apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: imagesets.cluster.gravitational.io
spec:
  group: cluster.gravitational.io
  versions:
  - name: v1beta1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          spec:
            type: object
            required: ["images"]
            properties:
              images:
                type: array
                items:
                  type: object
                  required: ["image"]
                  properties:
                    image:
                      type: string
                    registry:
                      type: string
    additionalPrinterColumns:
    - name: Images
      type: string
      jsonPath: .spec.images[*].image
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
  scope: Namespaced
  names:
    kind: ImageSet
    plural: imagesets
    singular: imageset
    shortNames:
    - imgset
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lens-admission-server
  namespace: kube-system
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
  name: lens-admission-server
  namespace: kube-system
spec:
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - "*"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: lens-admission-server
rules:
# Allow the admission server read-only cluster-wide access
# to ImageSet resources which it operates on.
- apiGroups:
  - cluster.gravitational.io
  resources:
  - imagesets
  verbs:
  - get
  - list
  - watch
# Make the admission server use proper PSP.
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - lens-admission-server
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: lens-admission-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lens-admission-server
subjects:
- kind: ServiceAccount
  name: lens-admission-server
  namespace: kube-system
---
apiVersion: scheduling.k8s.io/v1beta1
kind: PriorityClass
metadata:
  name: lens-admission-server
value: 1000000
globalDefault: false
description: "Priority class for Lens admission server pods."
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: lens-admission-server
  namespace: kube-system
  labels:
    gravitational.io/component: lens-admission-server
spec:
  selector:
    matchLabels:
      gravitational.io/component: lens-admission-server
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        gravitational.io/component: lens-admission-server
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      serviceAccountName: lens-admission-server
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      priorityClassName: lens-admission-server
      nodeSelector:
        gravitational.io/k8s-role: master
      containers:
      - name: lens
        image: registry.local:5000/gravitational/lens:0.0.0
        args:
        - start
        - --debug
        - --cert-path
        - /var/lib/gravity/secrets/lens-admission-server.cert
        - --key-path
        - /var/lib/gravity/secrets/lens-admission-server.key
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: -1
          capabilities:
            drop:
            - all
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 100M
          limits:
            cpu: 100m
            memory: 100M
        volumeMounts:
        - mountPath: /var/lib/gravity/secrets
          name: secrets
        - mountPath: /tmp
          name: tmp
      volumes:
      - name: secrets
        hostPath:
          path: /var/lib/gravity/secrets
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: lens-admission-server
  namespace: kube-system
  labels:
    gravitational.io/component: lens-admission-server
spec:
  ports:
  - name: api
    port: 5367
  selector:
    gravitational.io/component: lens-admission-server
